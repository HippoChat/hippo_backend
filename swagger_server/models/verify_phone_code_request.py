# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.phone import Phone  # noqa: F401,E501
from swagger_server.models.verification_code import VerificationCode  # noqa: F401,E501
import re  # noqa: F401,E501
from swagger_server import util


class VerifyPhoneCodeRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, phone: Phone=None, code: VerificationCode=None):  # noqa: E501
        """VerifyPhoneCodeRequest - a model defined in Swagger

        :param phone: The phone of this VerifyPhoneCodeRequest.  # noqa: E501
        :type phone: Phone
        :param code: The code of this VerifyPhoneCodeRequest.  # noqa: E501
        :type code: VerificationCode
        """
        self.swagger_types = {
            'phone': Phone,
            'code': VerificationCode
        }

        self.attribute_map = {
            'phone': 'phone',
            'code': 'code'
        }
        self._phone = phone
        self._code = code

    @classmethod
    def from_dict(cls, dikt) -> 'VerifyPhoneCodeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VerifyPhoneCodeRequest of this VerifyPhoneCodeRequest.  # noqa: E501
        :rtype: VerifyPhoneCodeRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phone(self) -> Phone:
        """Gets the phone of this VerifyPhoneCodeRequest.


        :return: The phone of this VerifyPhoneCodeRequest.
        :rtype: Phone
        """
        return self._phone

    @phone.setter
    def phone(self, phone: Phone):
        """Sets the phone of this VerifyPhoneCodeRequest.


        :param phone: The phone of this VerifyPhoneCodeRequest.
        :type phone: Phone
        """
        if phone is None:
            raise ValueError("Invalid value for `phone`, must not be `None`")  # noqa: E501

        self._phone = phone

    @property
    def code(self) -> VerificationCode:
        """Gets the code of this VerifyPhoneCodeRequest.


        :return: The code of this VerifyPhoneCodeRequest.
        :rtype: VerificationCode
        """
        return self._code

    @code.setter
    def code(self, code: VerificationCode):
        """Sets the code of this VerifyPhoneCodeRequest.


        :param code: The code of this VerifyPhoneCodeRequest.
        :type code: VerificationCode
        """
        if code is None:
            raise ValueError("Invalid value for `code`, must not be `None`")  # noqa: E501

        self._code = code
